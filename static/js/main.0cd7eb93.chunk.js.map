{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","Link","to","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aboutText","htmlFor","onClick","toggle","style","cursor","Textform","text","setText","useState","color","rows","value","onChange","event","target","backgroundColor","disabled","length","toUpperClick","newText","toUpperCase","showAlert","toLowerClick","toLowerCase","toCapitalizeClick","charAt","slice","toCopy","navigator","clipboard","writeText","toClearClick","split","filter","element","About","mystyle","border","data-bs-toggle","data-bs-target","aria-labelledby","data-bs-parent","Alert","height","alert","role","words","res","capitalize","message","App","setMode","setAlert","setTimeout","Router","toggleMode","document","body","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0cd7eb93.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport{Link}from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <Link className=\"navbar-brand\" to=\"/TextUtil\">{props.title}</Link>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <Link className=\"nav-link\" to=\"/about\">{props.aboutText}<span className=\"sr-only\">(current)</span></Link>\r\n      </li>\r\n    \r\n    </ul>\r\n  {/* {<form className=\"form-inline my-2 my-lg-0\">\r\n    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n  </form>} */}\r\n\r\n  <div className={`custom-control  custom-switch text-${props.mode==='light'?'dark':'light'} `}>\r\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitches\"/>\r\n  <label className=\"custom-control-label\" htmlFor=\"customSwitches\" onClick={props.toggle} style={{cursor:'pointer'}}>Enable Dark Mode</label>\r\n</div>\r\n  </div>\r\n</nav>\r\n\r\n    </>\r\n    \r\n  );\r\n}\r\nNavbar.propTypes={title:PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired};\r\n// Navbar.defaultProps={title:'TextUtil',aboutText:'About'};","import React,{useState} from 'react';\r\nexport default function Textform(props) {\r\n    const[text,setText]=useState(\"\");\r\n    let handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n         };\r\n         let toUpperClick=()=>{\r\n            let newText=text.toUpperCase();\r\n            setText(newText);\r\n            props.showAlert(\"Text to Uppercase\",\"success\");\r\n         }\r\n         let toLowerClick=()=>{\r\n          let newText=text.toLowerCase();\r\n          setText(newText);\r\n          props.showAlert(\"Text to Lowercase\",\"success\");\r\n       }\r\n       let toCapitalizeClick=()=>{\r\n        let newText=text.charAt(0).toUpperCase()+text.slice(1);\r\n        setText(newText);\r\n        props.showAlert(\"Text capitalized\",\"success\");\r\n       }\r\n       let toClearClick=()=>{\r\n        let newText=\"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared\",\"success\");\r\n       }\r\n       let toCopy=()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Copied\",\"success\");\r\n       }\r\n  return (\r\n    <>\r\n    \r\n<div>\r\n    <h1 style={{color:props.mode==='dark'?'white':'black'}}>{props.title}</h1>\r\n</div>\r\n    <div className=\"form-group my-3\">\r\n   <textarea className=\"form-control\"  id=\"exampleFormControlTextarea1\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'rgb(47 83 119)':'',color:props.mode==='dark'?'white':'black'}}></textarea>\r\n  <button disabled={text.length===0} type=\"button\" className=\"btn btn-primary my-2 mx-1\" onClick={toUpperClick}>Text to upper</button>\r\n  <button disabled={text.length===0}type=\"button\" className=\"btn btn-primary my-2 mx-1\" onClick={toLowerClick}>Text to Lower</button>\r\n  <button disabled={text.length===0} type=\"button\" className=\"btn btn-primary my-2 mx-1\" onClick={toCapitalizeClick}>Text to Capitalize</button>\r\n  <button disabled={text.length===0} type=\"button\" className=\"btn btn-primary my-2 mx-1\" onClick={toCopy}>Copy Text</button>\r\n  <button disabled={text.length===0} type=\"button\" className=\"btn btn-primary my-2 mx-1\" onClick={toClearClick}>Clear</button>\r\n  </div>\r\n  <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n    <h2>Your Text Summary</h2>\r\n    <p>Total {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Words and {text.length} Letters </p>\r\n    <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes to read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length===0?'Nothing to Preview!':text}</p>\r\n  </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function About(props) {\r\n    let mystyle={\r\n      color:props.mode==='dark'?'white':'black',\r\n      backgroundColor:props.mode==='dark'?'rgb(47 83 119)':'white',\r\n      border:props.mode==='dark'?'1px solid white ':'1px solid black'\r\n    }\r\n  return (\r\n    <>\r\n<div className=\"container my-2\" >\r\n<h1 style={{color:props.mode==='dark'?'white':'black'}}>About</h1>\r\n<div className=\"accordion accordion-flush\" id=\"accordionFlushExample\" >\r\n  <div className=\"accordion-item\"  style={mystyle}>\r\n    <h2 className=\"accordion-header\" id=\"flush-headingOne\" >\r\n      <button  style={{ color:props.mode==='dark'?'white':'black', backgroundColor:props.mode==='dark'?'rgb(47 83 119)':'white'}} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n        <strong>Analyze your Text</strong>\r\n      </button>\r\n    </h2>\r\n    <div  id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n      <div style={mystyle}  className=\"accordion-body\">Dive deep into your written content with our text analysis tools. From word count and readability analysis to sentiment analysis and keyword extraction, our tools offer valuable insights to help you understand and optimize your text.</div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={mystyle}>\r\n    <h2 className=\"accordion-header\" id=\"flush-headingTwo\" >\r\n      <button style={{ color:props.mode==='dark'?'white':'black', backgroundColor:props.mode==='dark'?'rgb(47 83 119)':'white'}}  className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n      <strong>Free to use</strong>\r\n      </button>\r\n    </h2>\r\n    <div  id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n      <div style={mystyle}  className=\"accordion-body\">We believe in making powerful text analysis tools accessible to everyone. That's why all our tools are completely free to use. No subscriptions, no hidden fees – just unlimited access to essential text processing utilities.</div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={mystyle}>\r\n    <h2 className=\"accordion-header\" id=\"flush-headingThree\" >\r\n      <button  style={{ color:props.mode==='dark'?'white':'black', backgroundColor:props.mode==='dark'?'rgb(47 83 119)':'white'}} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n      <strong>Browser Compatible</strong>\r\n      </button>\r\n    </h2>\r\n    <div  id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n      <div style={mystyle} className=\"accordion-body\">Our platform is designed to be seamlessly compatible with all major web browsers. Whether you prefer Chrome, Firefox, Safari, or any other browser, you can access TextUtils anytime, anywhere.</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n</div>\r\n\r\n     \r\n    </>\r\n   \r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(words)=>{\r\n    const res=words;\r\n    return res.charAt(0).toUpperCase()+res.slice(1);\r\n    }\r\n  return (\r\n<div style={{height:60}}>\r\n{props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show `}role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong> {props.alert.message}\r\n    \r\n  </div>}\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,Routes,\n  Route\n} from \"react-router-dom\";\nfunction App() {\n  const[mode,setMode]=useState('light');\n  const toggleMode=()=>{\n    \n    if(mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode enabled\",\"success\");\n      // document.title=\"TextUtil-Dark Mode\";\n      // setInterval(() => {\n      //   document.title=\"TextUtil-Dark Mode\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title=\"Install TextUtil now\"\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='';\n      showAlert(\"Light mode enabled\",\"success\");\n      // document.title=\"TextUtil-Light Mode\";\n    }\n  }\n  const[alert,setAlert]=useState(null);\n  const showAlert=(message,type)=>{\n   setAlert({message:message,type:type});\n   setTimeout(()=>{\nsetAlert(null);\n   },2000);\n  }\n  return (\n    <>\n   \n    <Router>\n    <Navbar title=\"TextUtil\"  mode={mode} toggle={toggleMode} aboutText='About'/>\n    <Alert alert={alert} />\n    <Routes>\n    <Route exact path='/about' element={<About mode={mode}></About>}></Route>\n          <Route exact path=\"/TextUtil\" element={\n          <div className=\"container\">\n    <Textform title=\"Try TextUtils - Word counter, Character counter, Uppercase to Lowercase(Vice versa)\" mode={mode} showAlert={showAlert}/></div>}></Route> \n   </Routes>\n        </Router> \n    </>\n  );\n}\n//This is compiled by babel\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}